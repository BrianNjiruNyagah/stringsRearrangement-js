function stringsRearrangement(inputArray) {
    let arr = [];
    //creates an array that has the length of the input array
    //to be used in the the possible combiations to happen
    inputArray.forEach(function(current,index){
        arr.push(index); 
    });
    
//used to find the number of possible patterns to occur   
//https://stackoverflow.com/questions/9960908/permutations-in-javascript?page=1&tab=votes#tab-top
  var permArr = [],usedChars = [];

  function permute(input) {
    var i, ch;
    for (i = 0; i < input.length; i++) {
      ch = input.splice(i, 1)[0];
      usedChars.push(ch);
      if (input.length == 0) {
        permArr.push(usedChars.slice());
      }
      permute(input);
      input.splice(i, 0, ch);
      usedChars.pop();
    }
    return permArr
  };
  
  let numberOfPossibilities = permute(arr)
  
  for(var i = 0;i!=numberOfPossibilities.length;i++){
     if(comparison(numberOfPossibilities[i],inputArray)){
         return true;
     }     
  }
    
    return false;
    
  
}

//compares words to check if they differ by more than one
function comparison(n_O,inputArray){
    for(var i = 0;i<n_O.length-1;i++){
        var count = 0;
        var word1 = inputArray[n_O[i]];
        var word2 = inputArray[n_O[i+1]];
        for(x in word1){
            if(word1[x]!=word2[x]){
               count++;
           }
        }
        if(count != 1){
           return false;
        }
    }
    return true;
}
